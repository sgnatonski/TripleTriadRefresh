var Game=function(){function n(n){if(this.gameId=ko.observable(0),this.firstPlayer=ko.observable(new Player(null)),this.secondPlayer=ko.observable(new Player(null)),this.currentPlayer=ko.observable(null),this.winner=ko.observable(null),this.tradeRule=ko.observable(0),this.rules=ko.observable(0),this.cardChain=ko.observableArray([]),this.firstPlayerScore=ko.observable(0),this.secondPlayerScore=ko.observable(0),this.inProgress=ko.observable(!1),this.isFull=ko.observable(!1),this.canJoin=ko.observable(!1),this.board=ko.observableArray([]),this.elementsOnBoard=ko.observableArray([]),n){ko.mapping.fromJS(n,{},this),this.firstPlayer(new Player(n.firstPlayer)),this.secondPlayer(new Player(n.secondPlayer));var t=[];ko.utils.arrayForEach(n.board,function(n){var i=[null,null,null];ko.utils.arrayForEach(n,function(n){n&&(i[(n.position-1)%3]=new Card(n))}),t.push(ko.observableArray(i))}),this.board(t)}this.isStarted=ko.computed(function(){return this.firstPlayer().isReady()&&this.secondPlayer().isReady()&&this.inProgress()},this),this.isFirstPlayerTurn=ko.computed(function(){return this.isStarted()&&this.firstPlayer().connectionId()===this.currentPlayer().connectionId()},this),this.isSecondPlayerTurn=ko.computed(function(){return this.isStarted()&&this.secondPlayer().connectionId()===this.currentPlayer().connectionId()},this)}return n.prototype.getPlayer=function(){return this.firstPlayer()&&this.firstPlayer().connectionId()==app.getConnectionId()?this.firstPlayer():this.secondPlayer()},n.prototype.getEnemy=function(){return this.firstPlayer()&&this.firstPlayer().connectionId()!=app.getConnectionId()?this.firstPlayer():this.secondPlayer()},n.prototype.getPlayerScore=function(){return this.firstPlayer()&&this.firstPlayer().connectionId()==app.getConnectionId()?this.firstPlayerScore():this.secondPlayerScore()},n.prototype.getEnemyScore=function(){return this.firstPlayer()&&this.firstPlayer().connectionId()!=app.getConnectionId()?this.firstPlayerScore():this.secondPlayerScore()},n}()